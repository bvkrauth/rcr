run config_test `0'
which rcr
di "Data from file ${fname}" _newline ///
   "Parameter values for tests: os = ${os}, exe = ${exe}, tol = ${tol}"
*******************************************************************
* Test basic functionality with default options
*******************************************************************
rcr SAT Small_Class ${controls}

* Compare against saved results - these were generated by calling
* "mkassert eclass"
assert `"`e(cmd)'"'             == `"rcr"'
assert `"`e(citype)'"'          == `"Conservative"'
_assert_streq `"`e(ctrlvar)'"' `" White_Asian Girl Free_Lunch White_Teacher Teacher_Experience Masters_Degree"'
assert `"`e(treatvar)'"'        == `"Small_Class"'
assert `"`e(depvar)'"'          == `"SAT"'
assert `"`e(predict)'"'         == `"rcr_predict"'
assert `"`e(estat_cmd)'"'       == `"rcr_estat"'
assert `"`e(title)'"'           == `"RCR model"'
assert `"`e(properties)'"'      == `"b V"'
assert         e(cilevel)   == 95
assert         e(lambdaH)   == 1
assert         e(lambdaL)   == 0
assert         e(N)         == 5839
if inlist("${exe}","python") {
    assert reldif( e(betaxCI_H)  , 6.488085265277207 ) <  ${tol}
    assert reldif( e(betaxCI_L)  , 3.259480712980887 ) <  ${tol}
    mat T_b = J(1,5,0)
    mat T_b[1,1] =   12.3105990931158
    mat T_b[1,2] =  8.169709964904111
    mat T_b[1,3] =  28.93548917053018
    mat T_b[1,4] =  5.135043764985984
    mat T_b[1,5] =  5.201502573585918
    matrix C_b = e(b)
    assert mreldif( C_b , T_b ) < ${tol}
    _assert_streq `"`: rowfullnames C_b'"' `"y1"'
    _assert_streq `"`: colfullnames C_b'"' `"lambdaInf betaxInf lambda0 betaxL betaxH"'
    mat drop C_b T_b
    mat T_V = J(5,5,0)
    mat T_V[1,1] =  4.402731051266596
    mat T_V[1,2] =    1.6809105802654
    mat T_V[1,3] =  14.86034025025826
    mat T_V[1,4] =  .0262163589896056
    mat T_V[1,5] =  .0148105709732053
    mat T_V[2,1] =    1.6809105802654
    mat T_V[2,2] =  936.8160737849615
    mat T_V[2,3] = -3305.544936932158
    mat T_V[2,4] = -20.86047836838232
    mat T_V[2,5] =  .0945995729744964
    mat T_V[3,1] =  14.86034025025826
    mat T_V[3,2] = -3305.544936932158
    mat T_V[3,3] =  11776.47628993367
    mat T_V[3,4] =  76.32135283048623
    mat T_V[3,5] =  2.093295532152181
    mat T_V[4,1] =  .0262163589896056
    mat T_V[4,2] = -20.86047836838232
    mat T_V[4,3] =  76.32135283048623
    mat T_V[4,4] =  .9157293950663895
    mat T_V[4,5] =  .4385652206329565
    mat T_V[5,1] =  .0148105709732053
    mat T_V[5,2] =  .0945995729744964
    mat T_V[5,3] =  2.093295532152181
    mat T_V[5,4] =  .4385652206329565
    mat T_V[5,5] =  .4309027116579904
    matrix C_V = e(V)
    assert mreldif( C_V , T_V ) < ${tol}
    _assert_streq `"`: rowfullnames C_V'"' `"lambdaInf betaxInf lambda0 betaxL betaxH"'
    _assert_streq `"`: colfullnames C_V'"' `"lambdaInf betaxInf lambda0 betaxL betaxH"'
    mat drop C_V T_V
}
else if inlist("${exe}","windows-fortran","unix-fortran") {
    assert reldif( e(betaxCI_H)  , 6.488085264868137 ) <  ${tol}
    assert reldif( e(betaxCI_L)  , 3.259480713112168 ) <  ${tol}
    tempname T_b
    mat `T_b' = J(1,5,0)
    mat `T_b'[1,1] =    12.310599093114
    mat `T_b'[1,2] =  8.169709964978111
    mat `T_b'[1,3] =   28.9354891702633
    mat `T_b'[1,4] =   5.13504376498382
    mat `T_b'[1,5] =   5.20150257358542
    tempname C_b
    matrix `C_b' = e(b)
    assert mreldif( `C_b' , `T_b' ) < ${tol}
    _assert_streq `"`: rowfullnames `C_b''"' `"y1"'
    _assert_streq `"`: colfullnames `C_b''"' `"lambdaInf betaxInf lambda0 betaxL betaxH"'
    mat drop `C_b' `T_b'
    tempname T_V
    mat `T_V' = J(5,5,0)
    mat `T_V'[1,1] =  4.402731051063719
    mat `T_V'[1,2] =  1.680910570472625
    mat `T_V'[1,3] =  14.86034005429277
    mat `T_V'[1,4] =  .0262163576425921
    mat `T_V'[1,5] =  .0148105705706819
    mat `T_V'[2,1] =  1.680910570472625
    mat `T_V'[2,2] =  936.8160737460918
    mat `T_V'[2,3] = -3305.544936154673
    mat `T_V'[2,4] = -20.86047836198298
    mat `T_V'[2,5] =  .0945995722412722
    mat `T_V'[3,1] =  14.86034005429277
    mat `T_V'[3,2] = -3305.544936154673
    mat `T_V'[3,3] =  11776.47628212536
    mat `T_V'[3,4] =  76.32135272938001
    mat `T_V'[3,5] =  2.093295479416368
    mat `T_V'[4,1] =  .0262163576425921
    mat `T_V'[4,2] = -20.86047836198298
    mat `T_V'[4,3] =  76.32135272938001
    mat `T_V'[4,4] =  .9157293949360822
    mat `T_V'[4,5] =  .4385652205906294
    mat `T_V'[5,1] =  .0148105705706819
    mat `T_V'[5,2] =  .0945995722412722
    mat `T_V'[5,3] =  2.093295479416368
    mat `T_V'[5,4] =  .4385652205906294
    mat `T_V'[5,5] =  .4309027113843122
    tempname C_V
    matrix `C_V' = e(V)
    assert mreldif( `C_V' , `T_V' ) < ${tol}
    _assert_streq `"`: rowfullnames `C_V''"' `"lambdaInf betaxInf lambda0 betaxL betaxH"'
    _assert_streq `"`: colfullnames `C_V''"' `"lambdaInf betaxInf lambda0 betaxL betaxH"'
    mat drop `C_V' `T_V'
}
else {
    di as error "Invalid value for exe: ${exe}"
    error 1
}
