% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/rcr.R
\name{rcr_fit}
\alias{rcr_fit}
\title{Fitting function for RCR model}
\usage{
rcr_fit(
  endog,
  exog,
  rc_range = c(0, 1),
  weights = NULL,
  groupvar = NULL,
  cov_type = "nonrobust",
  vceadj = 1,
  citype = "conservative",
  cilevel = 95
)
}
\arguments{
\item{endog}{A matrix or \code{data.frame} representing the
endogenous (outcome and treatment) variables
in the model}

\item{exog}{A matix or \code{data.frame} representing
the exogenous (control) variables in the model.
Its first column must be an intercept.}

\item{rc_range}{An optional numeric vector of length two indicating
the assumed range for the relative correlation parameter
lambda.\code{-Inf} is allowed for the lower bound, and \code{Inf} is
allowed for the upper bound.}

\item{weights}{An optional vector of weights to be used in the fitting
process.}

\item{groupvar}{An optional cluster ID variable for
cluster-robust covariance matrix estimates,
or NULL}

\item{cov_type}{The type of covariance matrix to
estimate, either "\code{nonrobust}" (the
default) or "\code{cluster}"}

\item{vceadj}{An optional adjustment factor to perform degrees-of-freedom
adjustments for the estimated covariance matrix.  That is,
the estimated covariance matrix will be multiplied by the value of
\code{vceadj}.}

\item{citype}{The confidence interval type, either
"\code{conservative}" (the default), "\code{upper}",
"\code{lower}", or "\code{Imbens-Manski}"}

\item{cilevel}{The desired confidence level,
on a 0-100 scale.}
}
\value{
\code{rcr_fit()} returns a pointer to the Python object of class
"\code{rcrbounds.RCRResults}" as returned by the Python call.
}
\description{
\code{rcr_fit()} is a bare-bones wrapper function to call the Python
code to estimate the RCR model. It is not intended for
most users; you should use \code{\link[=rcr]{rcr()}} unless you wish to interact
more directly with the Python code.
}
\details{
The object returned by \code{rcr_fit()} is a pointer to a Python object of
class "\code{rcrbounds.RCRResults}" and not a normal R object. All attributes
\emph{and methods} of the Python object are available within R. See the
documentation for the Python \code{rcrbounds} module for details on these
attributes and methods.

Note that the Python object ceases to exist when the R session ends,
and cannot be saved in \code{.RData} or any other file. The pointer
to the Python object then becomes a null pointer.
}
\seealso{
\code{\link[=rcr]{rcr()}} the high-level version of this function which
should be used by most users.
}
